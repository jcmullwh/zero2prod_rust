name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]
        test: ['std']
        # modifications to the matrix to include/exclude certain jobs
        include:
          - os: ubuntu-latest
            # run code coverage and clippy only once
            tarpaulin: true
            clippy: true
          - os: macos-latest
            tarpaulin: false
            cluppy: false
          - os: windows-latest
            tarpaulin: false
            cluppy: false
    env:
      RUST_BACKTRACE: full
      CARGO_TERM_COLOR: always
      RUSTFLAGS: "-Dwarnings"
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
      - name: Cache cargo registry
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git            
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-                  
      - name: Rustfmt
        run: cargo fmt --all -- --check
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
      - name: Clippy
        if: matrix.clippy == true
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Install Tarpaulin
        if: matrix.tarpaulin == true
        run: cargo install cargo-tarpaulin
      - name: Coverage
        if: matrix.tarpaulin == true
        run: cargo tarpaulin --ignore-tests