name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]
        test: ['std']
        # modifications to the matrix to include/exclude certain jobs
        include:
          - os: ubuntu-latest
            sccache-path: /home/runner/.cache/sccache
            # run code coverage and clippy only once
            tarpaulin: true
            clippy: true
          - os: macos-latest
            sccache-path: /Users/runner/Library/Caches/Mozilla.sccache
            tarpaulin: false
            cluppy: false
          - os: windows-latest
            sccache-path: C:\Users\runner\AppData\Local\sccache
            tarpaulin: false
            cluppy: false
    env:
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
      LLVM_VERSION: 14.0.0
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: ${{ matrix.sccache-path }}
      CARGO_TERM_COLOR: always
      RUSTFLAGS: "-Dwarnings"
      # SCCACHE_RECACHE: 1 # Uncomment this to clear cache, then comment it back out
    steps:
      - uses: actions/checkout@v4
      - name: Install sccache (ubuntu-latest)
        if: matrix.os == 'ubuntu-latest'
        env:
          LINK: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: 0.8.0
        run: |
          SCCACHE_FILE=sccache-dist-v${SCCACHE_VERSION}-x86_64-unknown-linux-musl
          mkdir -p $HOME/.local/bin
          curl -L "${LINK}/v${SCCACHE_VERSION}/${SCCACHE_FILE}.tar.gz" -o "${SCCACHE_FILE}.tar.gz"
          if [ $? -ne 0 ]; then
            echo "Error downloading sccache."
            exit 1
          fi
          tar xzf "${SCCACHE_FILE}.tar.gz"
          if [ $? -ne 0 ]; then
            echo "Error extracting sccache."
            exit 1
          fi
          ls -lah sccache-dist-v0.8.0-x86_64-unknown-linux-musl/
          mv -f $SCCACHE_FILE/sccache-dist $HOME/.local/bin/sccache-dist
          echo "$HOME/.local/bin" >> $GITHUB_PATH          
      - name: Install sccache (macos-latest)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install sccache     
      - name: Install sccache (windows-latest)
        if: matrix.os == 'windows-latest'
        run: |
          choco install sccache     
      - name: Install Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
      - name: Cache cargo registry
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git            
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-            
      - name: Save sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: ${{ matrix.sccache-path }}
          key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-sccache-            
      - name: Start sccache server
        run: sccache --start-server
      - name: Print sccache stats
        run: sccache --show-stats
      - name: Rustfmt
        run: cargo fmt --all -- --check
      - name: Clippy
        if: matrix.clippy == true
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
      - name: Install Tarpaulin
        if: matrix.tarpaulin == true
        run: cargo install cargo-tarpaulin
      - name: Coverage
        if: matrix.tarpaulin == true
        run: cargo tarpaulin --ignore-tests
      - name: Stop sccache server
        run: sccache --stop-server || true